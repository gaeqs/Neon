set(
        SOURCES
        engine/Application.cpp
        engine/Application.h
        util/Result.h
        gl/Shader.cpp
        gl/Shader.h
        engine/Room.cpp
        engine/Room.h
        engine/Camera.cpp
        engine/Camera.h
        engine/Frustum.cpp
        engine/Frustum.h
        engine/Renderer.cpp
        engine/Renderer.h
        engine/GraphicComponent.cpp
        engine/GraphicComponent.h
        engine/Material.cpp
        engine/Material.h
        engine/GameObject.cpp
        engine/GameObject.h
        engine/Component.cpp
        engine/Component.h
        util/ClusteredLinkedCollection.h
        engine/Engine.h
        engine/collection/ComponentCollection.cpp
        engine/collection/ComponentCollection.h
        gl/GLTexture.cpp
        gl/GLTexture.h
        engine/collection/TextureCollection.cpp
        engine/collection/TextureCollection.h
        engine/IdentifiableWrapper.h
        engine/Transform.cpp
        engine/Transform.h
        engine/Identifiable.h
        engine/Texture.cpp
        engine/Texture.h
        gl/GLMesh.cpp
        gl/GLMesh.h
        gl/GLShaderRenderer.cpp
        gl/GLShaderRenderer.h
        util/component/CameraMovementComponent.cpp
        util/component/CameraMovementComponent.h
        engine/TextureFormat.h
        assimp/ModelLoader.h
        assimp/AssimpMaterialParameters.h
        assimp/ModelLoader.cpp
        engine/KeyboardEvent.h
        engine/CursorEvent.h
        engine/model/Mesh.cpp
        engine/model/Mesh.h
        engine/model/Model.cpp
        engine/model/Model.h
        gl/GLModel.cpp
        gl/GLModel.h
        engine/shader/ShaderUniformBuffer.cpp
        engine/shader/ShaderUniformBuffer.h
        gl/GLShaderUniformBuffer.cpp
        gl/GLShaderUniformBuffer.h
        engine/collection/IdentifiableCollection.h
        engine/model/DefaultInstancingData.h)

cmrc_add_resource_library(dummy)

add_library(neon STATIC ${SOURCES})
target_link_libraries(neon PUBLIC ${LIBRARIES} ${CMAKE_DL_LIBS} dummy)
target_compile_definitions(neon PUBLIC USE_OPENGL)